// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`A simple example 1`] = `
{
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthLambdasCheckAuthFunction6B3C9473": {
      "DependsOn": [
        "AuthLambdasServiceRoleF10A0667",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AuthLambdasServiceRoleF10A0667",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthLambdasCheckAuthFunctionCurrentVersionF10C4D627dbec5a8502ab12d36dafcbdebcc9fd6": {
      "Properties": {
        "FunctionName": {
          "Ref": "AuthLambdasCheckAuthFunction6B3C9473",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "AuthLambdasCheckAuthFunctionVersionParamParameuwest1Resoure8ACD3434": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AuthLambdasCheckAuthFunctionVersionParamParameuwest1ResoureCustomResourcePolicy088F1114",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"putParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-CheckAuthFunction-function-arn","Value":"",
              {
                "Ref": "AuthLambdasCheckAuthFunctionCurrentVersionF10C4D627dbec5a8502ab12d36dafcbdebcc9fd6",
              },
              "","Type":"String","Overwrite":true},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-CheckAuthFunction-function-arn"}}",
            ],
          ],
        },
        "Delete": "{"service":"SSM","action":"deleteParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-CheckAuthFunction-function-arn"},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-CheckAuthFunction-function-arn"}}",
        "InstallLatestAwsSdk": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"putParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-CheckAuthFunction-function-arn","Value":"",
              {
                "Ref": "AuthLambdasCheckAuthFunctionCurrentVersionF10C4D627dbec5a8502ab12d36dafcbdebcc9fd6",
              },
              "","Type":"String","Overwrite":true},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-CheckAuthFunction-function-arn"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthLambdasCheckAuthFunctionVersionParamParameuwest1ResoureCustomResourcePolicy088F1114": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ssm:DeleteParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthLambdasCheckAuthFunctionVersionParamParameuwest1ResoureCustomResourcePolicy088F1114",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthLambdasHttpHeadersFunctionC7A2BAB9": {
      "DependsOn": [
        "AuthLambdasServiceRoleF10A0667",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AuthLambdasServiceRoleF10A0667",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthLambdasHttpHeadersFunctionCurrentVersion8B8CDE2E7dbec5a8502ab12d36dafcbdebcc9fd6": {
      "Properties": {
        "FunctionName": {
          "Ref": "AuthLambdasHttpHeadersFunctionC7A2BAB9",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "AuthLambdasHttpHeadersFunctionVersionParamParameuwest1Resoure0C3C81F2": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AuthLambdasHttpHeadersFunctionVersionParamParameuwest1ResoureCustomResourcePolicyC99B8AA6",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"putParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-HttpHeadersFunction-function-arn","Value":"",
              {
                "Ref": "AuthLambdasHttpHeadersFunctionCurrentVersion8B8CDE2E7dbec5a8502ab12d36dafcbdebcc9fd6",
              },
              "","Type":"String","Overwrite":true},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-HttpHeadersFunction-function-arn"}}",
            ],
          ],
        },
        "Delete": "{"service":"SSM","action":"deleteParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-HttpHeadersFunction-function-arn"},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-HttpHeadersFunction-function-arn"}}",
        "InstallLatestAwsSdk": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"putParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-HttpHeadersFunction-function-arn","Value":"",
              {
                "Ref": "AuthLambdasHttpHeadersFunctionCurrentVersion8B8CDE2E7dbec5a8502ab12d36dafcbdebcc9fd6",
              },
              "","Type":"String","Overwrite":true},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-HttpHeadersFunction-function-arn"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthLambdasHttpHeadersFunctionVersionParamParameuwest1ResoureCustomResourcePolicyC99B8AA6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ssm:DeleteParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthLambdasHttpHeadersFunctionVersionParamParameuwest1ResoureCustomResourcePolicyC99B8AA6",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthLambdasParseAuthFunctionC04A121B": {
      "DependsOn": [
        "AuthLambdasServiceRoleF10A0667",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AuthLambdasServiceRoleF10A0667",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthLambdasParseAuthFunctionCurrentVersionA32A59917dbec5a8502ab12d36dafcbdebcc9fd6": {
      "Properties": {
        "FunctionName": {
          "Ref": "AuthLambdasParseAuthFunctionC04A121B",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "AuthLambdasParseAuthFunctionVersionParamParameuwest1Resoure934661C6": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AuthLambdasParseAuthFunctionVersionParamParameuwest1ResoureCustomResourcePolicyCEAE27DB",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"putParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-ParseAuthFunction-function-arn","Value":"",
              {
                "Ref": "AuthLambdasParseAuthFunctionCurrentVersionA32A59917dbec5a8502ab12d36dafcbdebcc9fd6",
              },
              "","Type":"String","Overwrite":true},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-ParseAuthFunction-function-arn"}}",
            ],
          ],
        },
        "Delete": "{"service":"SSM","action":"deleteParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-ParseAuthFunction-function-arn"},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-ParseAuthFunction-function-arn"}}",
        "InstallLatestAwsSdk": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"putParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-ParseAuthFunction-function-arn","Value":"",
              {
                "Ref": "AuthLambdasParseAuthFunctionCurrentVersionA32A59917dbec5a8502ab12d36dafcbdebcc9fd6",
              },
              "","Type":"String","Overwrite":true},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-ParseAuthFunction-function-arn"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthLambdasParseAuthFunctionVersionParamParameuwest1ResoureCustomResourcePolicyCEAE27DB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ssm:DeleteParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthLambdasParseAuthFunctionVersionParamParameuwest1ResoureCustomResourcePolicyCEAE27DB",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthLambdasRefreshAuthFunction4B0B3BD6": {
      "DependsOn": [
        "AuthLambdasServiceRoleF10A0667",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AuthLambdasServiceRoleF10A0667",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthLambdasRefreshAuthFunctionCurrentVersion632285F67dbec5a8502ab12d36dafcbdebcc9fd6": {
      "Properties": {
        "FunctionName": {
          "Ref": "AuthLambdasRefreshAuthFunction4B0B3BD6",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "AuthLambdasRefreshAuthFunctionVersionParamParameuwest1Resoure0C0D8913": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AuthLambdasRefreshAuthFunctionVersionParamParameuwest1ResoureCustomResourcePolicy095CEC70",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"putParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-RefreshAuthFunction-function-arn","Value":"",
              {
                "Ref": "AuthLambdasRefreshAuthFunctionCurrentVersion632285F67dbec5a8502ab12d36dafcbdebcc9fd6",
              },
              "","Type":"String","Overwrite":true},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-RefreshAuthFunction-function-arn"}}",
            ],
          ],
        },
        "Delete": "{"service":"SSM","action":"deleteParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-RefreshAuthFunction-function-arn"},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-RefreshAuthFunction-function-arn"}}",
        "InstallLatestAwsSdk": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"putParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-RefreshAuthFunction-function-arn","Value":"",
              {
                "Ref": "AuthLambdasRefreshAuthFunctionCurrentVersion632285F67dbec5a8502ab12d36dafcbdebcc9fd6",
              },
              "","Type":"String","Overwrite":true},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-RefreshAuthFunction-function-arn"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthLambdasRefreshAuthFunctionVersionParamParameuwest1ResoureCustomResourcePolicy095CEC70": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ssm:DeleteParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthLambdasRefreshAuthFunctionVersionParamParameuwest1ResoureCustomResourcePolicy095CEC70",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthLambdasServiceRoleF10A0667": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "edgelambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthLambdasSignOutFunction251863E4": {
      "DependsOn": [
        "AuthLambdasServiceRoleF10A0667",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AuthLambdasServiceRoleF10A0667",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthLambdasSignOutFunctionCurrentVersion0576BBB17dbec5a8502ab12d36dafcbdebcc9fd6": {
      "Properties": {
        "FunctionName": {
          "Ref": "AuthLambdasSignOutFunction251863E4",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "AuthLambdasSignOutFunctionVersionParamParameuwest1Resoure18583D2D": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AuthLambdasSignOutFunctionVersionParamParameuwest1ResoureCustomResourcePolicy16B30BE4",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"putParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-SignOutFunction-function-arn","Value":"",
              {
                "Ref": "AuthLambdasSignOutFunctionCurrentVersion0576BBB17dbec5a8502ab12d36dafcbdebcc9fd6",
              },
              "","Type":"String","Overwrite":true},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-SignOutFunction-function-arn"}}",
            ],
          ],
        },
        "Delete": "{"service":"SSM","action":"deleteParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-SignOutFunction-function-arn"},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-SignOutFunction-function-arn"}}",
        "InstallLatestAwsSdk": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"SSM","action":"putParameter","parameters":{"Name":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-SignOutFunction-function-arn","Value":"",
              {
                "Ref": "AuthLambdasSignOutFunctionCurrentVersion0576BBB17dbec5a8502ab12d36dafcbdebcc9fd6",
              },
              "","Type":"String","Overwrite":true},"region":"eu-west-1","physicalResourceId":{"id":"/cf/region/us-east-1/stack/Stack1/c822e4a2b5e248e64ee706fb7d4af8c80d9b03944e-SignOutFunction-function-arn"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthLambdasSignOutFunctionVersionParamParameuwest1ResoureCustomResourcePolicy16B30BE4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "ssm:DeleteParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthLambdasSignOutFunctionVersionParamParameuwest1ResoureCustomResourcePolicy16B30BE4",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`A simple example 2`] = `
{
  "Parameters": Any<Object>,
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthCheckAuthFnC12AAE69": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Config": {
          "callbackPath": "/auth/callback",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907",
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "AuthClientSecretretrievesecret13A79B4F",
              "UserPoolClient.ClientSecret",
            ],
          },
          "cognitoAuthDomain": "my-domain.auth.eu-west-1.amazoncognito.com",
          "cookieSettings": {
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
          },
          "httpHeaders": {
            "Cache-Control": "no-cache",
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Referrer-Policy": "same-origin",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "X-Content-Type-Options": "nosniff",
            "X-Frame-Options": "DENY",
            "X-XSS-Protection": "1; mode=block",
          },
          "logLevel": "warn",
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "AuthNonceSigningSecretC47F85D8",
              "Value",
            ],
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin",
          ],
          "refreshAuthPath": "/auth/refresh",
          "signOutPath": "/auth/sign-out",
          "signOutRedirectTo": "/",
          "userPoolId": {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackStack1c822e4a2b5e248e64ee706fb7d4af8c80d9b03944eCheckAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Nonce": "",
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthClientSecretretrievesecret13A79B4F": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AuthClientSecretretrievesecretCustomResourcePolicy8EDE562D",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"CognitoIdentityServiceProvider","action":"describeUserPoolClient","parameters":{"UserPoolId":"",
              {
                "Ref": "UserPool6BA7E5F2",
              },
              "","ClientId":"",
              {
                "Ref": "UserPoolUserPoolClient40176907",
              },
              ""},"physicalResourceId":{"id":"",
              {
                "Ref": "UserPool6BA7E5F2",
              },
              "-",
              {
                "Ref": "UserPoolUserPoolClient40176907",
              },
              ""}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"CognitoIdentityServiceProvider","action":"describeUserPoolClient","parameters":{"UserPoolId":"",
              {
                "Ref": "UserPool6BA7E5F2",
              },
              "","ClientId":"",
              {
                "Ref": "UserPoolUserPoolClient40176907",
              },
              ""},"physicalResourceId":{"id":"",
              {
                "Ref": "UserPool6BA7E5F2",
              },
              "-",
              {
                "Ref": "UserPoolUserPoolClient40176907",
              },
              ""}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthClientSecretretrievesecretCustomResourcePolicy8EDE562D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "UserPool6BA7E5F2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthClientSecretretrievesecretCustomResourcePolicy8EDE562D",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthClientUpdate3823E358": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AuthClientUpdateCustomResourcePolicyF8E9AEC5",
      ],
      "Properties": {
        "Create": {
          "Fn::Join": [
            "",
            [
              "{"service":"CognitoIdentityServiceProvider","action":"updateUserPoolClient","parameters":{"AllowedOAuthFlows":["code"],"AllowedOAuthFlowsUserPoolClient":true,"SupportedIdentityProviders":["COGNITO"],"AllowedOAuthScopes":["phone","email","profile","openid","aws.cognito.signin.user.admin"],"ClientId":"",
              {
                "Ref": "UserPoolUserPoolClient40176907",
              },
              "","CallbackURLs":["https://",
              {
                "Fn::GetAtt": [
                  "CloudFrontDistributionCFDistribution599ADCC4",
                  "DomainName",
                ],
              },
              "/auth/callback"],"LogoutURLs":["https://",
              {
                "Fn::GetAtt": [
                  "CloudFrontDistributionCFDistribution599ADCC4",
                  "DomainName",
                ],
              },
              "/"],"UserPoolId":"",
              {
                "Ref": "UserPool6BA7E5F2",
              },
              ""},"physicalResourceId":{"id":"",
              {
                "Ref": "UserPool6BA7E5F2",
              },
              "-",
              {
                "Ref": "UserPoolUserPoolClient40176907",
              },
              ""}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{"service":"CognitoIdentityServiceProvider","action":"updateUserPoolClient","parameters":{"AllowedOAuthFlows":["code"],"AllowedOAuthFlowsUserPoolClient":true,"SupportedIdentityProviders":["COGNITO"],"AllowedOAuthScopes":["phone","email","profile","openid","aws.cognito.signin.user.admin"],"ClientId":"",
              {
                "Ref": "UserPoolUserPoolClient40176907",
              },
              "","CallbackURLs":["https://",
              {
                "Fn::GetAtt": [
                  "CloudFrontDistributionCFDistribution599ADCC4",
                  "DomainName",
                ],
              },
              "/auth/callback"],"LogoutURLs":["https://",
              {
                "Fn::GetAtt": [
                  "CloudFrontDistributionCFDistribution599ADCC4",
                  "DomainName",
                ],
              },
              "/"],"UserPoolId":"",
              {
                "Ref": "UserPool6BA7E5F2",
              },
              ""},"physicalResourceId":{"id":"",
              {
                "Ref": "UserPool6BA7E5F2",
              },
              "-",
              {
                "Ref": "UserPoolUserPoolClient40176907",
              },
              ""}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthClientUpdateCustomResourcePolicyF8E9AEC5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:UpdateUserPoolClient",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "UserPool6BA7E5F2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthClientUpdateCustomResourcePolicyF8E9AEC5",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthHttpHeadersFn7D541668": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Config": {
          "callbackPath": "/auth/callback",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907",
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "AuthClientSecretretrievesecret13A79B4F",
              "UserPoolClient.ClientSecret",
            ],
          },
          "cognitoAuthDomain": "my-domain.auth.eu-west-1.amazoncognito.com",
          "cookieSettings": {
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
          },
          "httpHeaders": {
            "Cache-Control": "no-cache",
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Referrer-Policy": "same-origin",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "X-Content-Type-Options": "nosniff",
            "X-Frame-Options": "DENY",
            "X-XSS-Protection": "1; mode=block",
          },
          "logLevel": "warn",
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "AuthNonceSigningSecretC47F85D8",
              "Value",
            ],
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin",
          ],
          "refreshAuthPath": "/auth/refresh",
          "signOutPath": "/auth/sign-out",
          "signOutRedirectTo": "/",
          "userPoolId": {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackStack1c822e4a2b5e248e64ee706fb7d4af8c80d9b03944eHttpHeadersFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Nonce": "",
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthNonceSigningSecretC47F85D8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Nonce": "",
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventD98C7326",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthParseAuthFn975D8094": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Config": {
          "callbackPath": "/auth/callback",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907",
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "AuthClientSecretretrievesecret13A79B4F",
              "UserPoolClient.ClientSecret",
            ],
          },
          "cognitoAuthDomain": "my-domain.auth.eu-west-1.amazoncognito.com",
          "cookieSettings": {
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
          },
          "httpHeaders": {
            "Cache-Control": "no-cache",
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Referrer-Policy": "same-origin",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "X-Content-Type-Options": "nosniff",
            "X-Frame-Options": "DENY",
            "X-XSS-Protection": "1; mode=block",
          },
          "logLevel": "warn",
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "AuthNonceSigningSecretC47F85D8",
              "Value",
            ],
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin",
          ],
          "refreshAuthPath": "/auth/refresh",
          "signOutPath": "/auth/sign-out",
          "signOutRedirectTo": "/",
          "userPoolId": {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackStack1c822e4a2b5e248e64ee706fb7d4af8c80d9b03944eParseAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Nonce": "",
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthRefreshAuthFnEA5CBBAE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Config": {
          "callbackPath": "/auth/callback",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907",
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "AuthClientSecretretrievesecret13A79B4F",
              "UserPoolClient.ClientSecret",
            ],
          },
          "cognitoAuthDomain": "my-domain.auth.eu-west-1.amazoncognito.com",
          "cookieSettings": {
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
          },
          "httpHeaders": {
            "Cache-Control": "no-cache",
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Referrer-Policy": "same-origin",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "X-Content-Type-Options": "nosniff",
            "X-Frame-Options": "DENY",
            "X-XSS-Protection": "1; mode=block",
          },
          "logLevel": "warn",
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "AuthNonceSigningSecretC47F85D8",
              "Value",
            ],
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin",
          ],
          "refreshAuthPath": "/auth/refresh",
          "signOutPath": "/auth/sign-out",
          "signOutRedirectTo": "/",
          "userPoolId": {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackStack1c822e4a2b5e248e64ee706fb7d4af8c80d9b03944eRefreshAuthFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Nonce": "",
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthSignOutFnD060B75E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Config": {
          "callbackPath": "/auth/callback",
          "clientId": {
            "Ref": "UserPoolUserPoolClient40176907",
          },
          "clientSecret": {
            "Fn::GetAtt": [
              "AuthClientSecretretrievesecret13A79B4F",
              "UserPoolClient.ClientSecret",
            ],
          },
          "cognitoAuthDomain": "my-domain.auth.eu-west-1.amazoncognito.com",
          "cookieSettings": {
            "accessToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "idToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "nonce": "Path=/; Secure; HttpOnly; SameSite=Lax",
            "refreshToken": "Path=/; Secure; HttpOnly; SameSite=Lax",
          },
          "httpHeaders": {
            "Cache-Control": "no-cache",
            "Content-Security-Policy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
            "Referrer-Policy": "same-origin",
            "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
            "X-Content-Type-Options": "nosniff",
            "X-Frame-Options": "DENY",
            "X-XSS-Protection": "1; mode=block",
          },
          "logLevel": "warn",
          "nonceSigningSecret": {
            "Fn::GetAtt": [
              "AuthNonceSigningSecretC47F85D8",
              "Value",
            ],
          },
          "oauthScopes": [
            "phone",
            "email",
            "profile",
            "openid",
            "aws.cognito.signin.user.admin",
          ],
          "refreshAuthPath": "/auth/refresh",
          "signOutPath": "/auth/sign-out",
          "signOutRedirectTo": "/",
          "userPoolId": {
            "Ref": "UserPool6BA7E5F2",
          },
        },
        "FunctionArn": {
          "Ref": "SsmParameterValuecfregionuseast1stackStack1c822e4a2b5e248e64ee706fb7d4af8c80d9b03944eSignOutFunctionfunctionarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Nonce": "",
        "ServiceToken": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "Bucket83908E77": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudFrontDistributionCFDistribution599ADCC4": {
      "Properties": {
        "DistributionConfig": {
          "CacheBehaviors": [
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "QueryString": true,
              },
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "AuthParseAuthFn975D8094",
                      "FunctionArn",
                    ],
                  },
                },
              ],
              "PathPattern": "/auth/callback",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "QueryString": true,
              },
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "AuthRefreshAuthFnEA5CBBAE",
                      "FunctionArn",
                    ],
                  },
                },
              ],
              "PathPattern": "/auth/refresh",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "QueryString": true,
              },
              "LambdaFunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "LambdaFunctionARN": {
                    "Fn::GetAtt": [
                      "AuthSignOutFnD060B75E",
                      "FunctionArn",
                    ],
                  },
                },
              ],
              "PathPattern": "/auth/sign-out",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
            ],
            "CachedMethods": [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "LambdaFunctionAssociations": [
              {
                "EventType": "viewer-request",
                "LambdaFunctionARN": {
                  "Fn::GetAtt": [
                    "AuthCheckAuthFnC12AAE69",
                    "FunctionArn",
                  ],
                },
              },
              {
                "EventType": "origin-response",
                "LambdaFunctionARN": {
                  "Fn::GetAtt": [
                    "AuthHttpHeadersFn7D541668",
                    "FunctionArn",
                  ],
                },
              },
            ],
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": {
                "Fn::GetAtt": [
                  "Bucket83908E77",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": {},
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "CloudFrontDefaultCertificate": true,
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "UserPool6BA7E5F2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true,
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "UserPoolUserPoolClient40176907": {
      "Properties": {
        "AllowedOAuthFlows": [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "https://example.com",
        ],
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": true,
        "PreventUserExistenceErrors": "ENABLED",
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "UserPoolId": {
          "Ref": "UserPool6BA7E5F2",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99": {
      "DependsOn": [
        "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "henristcloudfrontauthgeneratesecretproviderFunctionServiceRole4523A59B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventD98C7326": {
      "DependsOn": [
        "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528",
        "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Description": "AWS CDK resource provider framework - onEvent (Stack2/henrist.cloudfront-auth.generate-secret.provider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "henristcloudfrontauthgeneratesecretproviderFunction3D1AFA99",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleDefaultPolicyC126E528",
        "Roles": [
          {
            "Ref": "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "henristcloudfrontauthgeneratesecretproviderProviderframeworkonEventServiceRoleEE714F1C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "henristlambdaconfigproviderProviderframeworkonEventB2FC78D4": {
      "DependsOn": [
        "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E",
        "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Description": "AWS CDK resource provider framework - onEvent (Stack2/henrist.lambda-config.provider/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "henristlambdaconfigproviderUpdateCodeFnBF8DF66B",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "henristlambdaconfigproviderUpdateCodeFnBF8DF66B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "henristlambdaconfigproviderUpdateCodeFnBF8DF66B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "henristlambdaconfigproviderProviderframeworkonEventServiceRoleDefaultPolicy3D96FE9E",
        "Roles": [
          {
            "Ref": "henristlambdaconfigproviderProviderframeworkonEventServiceRole9AA104AD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "henristlambdaconfigproviderUpdateCodeFnBF8DF66B": {
      "DependsOn": [
        "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A",
        "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712",
      ],
      "Properties": {
        "Code": Any<Object>,
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:GetFunction",
                "lambda:UpdateFunctionCode",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "henristlambdaconfigproviderUpdateCodeFnServiceRoleDefaultPolicyE51A664A",
        "Roles": [
          {
            "Ref": "henristlambdaconfigproviderUpdateCodeFnServiceRole2FF24712",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
